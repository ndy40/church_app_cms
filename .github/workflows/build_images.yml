name: Build and Publish Docker Images

on:
  workflow_dispatch:
  push:
    tags:
      - 'v*'
jobs:
  build_publish:
    runs-on: ubuntu-latest
    name: "Checkout, Build and Publish - Web"
    steps:
      - name: Check out
        uses: actions/checkout@v2
        with:
          token: "${{ secrets.PERSONAL_ACCESS_TOKEN }}"
          fetch-depth: 0
      - name: Docker meta web
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: |
            ghcr.io/ndy40/church_cms
          tags: |
            type=semver,pattern={{version}}
          github-token: ${{ secrets.GHCR_TOKEN }}
      - name: Github CR Login
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ secrets.GHCR_USERNAME }}
          password: ${{ secrets.GHCR_TOKEN }}
      - name: Build and push - Web
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          target: devstage
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
  build_nginx_image:
    runs-on: ubuntu-latest
    name: Build and Publish Nginx Image
    needs:
      - build_publish
    steps:
      - name: Check out
        uses: actions/checkout@v2
        with:
          token: "${{ secrets.PERSONAL_ACCESS_TOKEN }}"
          fetch-depth: 0
      - name: Docker meta nginx
        id: meta_nginx
        uses: docker/metadata-action@v3
        with:
          images: |
            ghcr.io/ndy40/church_cms-nginx
          tags: |
            type=semver,pattern={{version}}
          github-token: ${{ secrets.GHCR_TOKEN }}
      - name: Github CR Login
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ secrets.GHCR_USERNAME }}
          password: ${{ secrets.GHCR_TOKEN }}
      - name: Build and push - Nginx
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          target: webserver-staging
          tags: ${{ steps.meta_nginx.outputs.tags }}
          labels: ${{ steps.meta_nginx.outputs.labels }}

  deploy_to_staging:
    runs-on: ubuntu-latest
    name: deploy latest tag to staging
    needs:
      - build_publish
    steps:
      - name: Check out
        uses: actions/checkout@v2
        with:
          token: "${{ secrets.PERSONAL_ACCESS_TOKEN }}"
          fetch-depth: 0
      - name: Setup config
        run: |
          echo "${{ secrets.APP_CONFIG }}" | base64 -d > config.json
      - name: Install doctl
        run: |
          wget https://github.com/digitalocean/doctl/releases/download/v1.75.0/doctl-1.75.0-linux-amd64.tar.gz
          tar xf doctl-1.75.0-linux-amd64.tar.gz
          sudo mv ./doctl /usr/local/bin
          doctl -t ${{ secrets.DO_TOKEN }} auth init
          doctl compute droplet list --format PublicIPv4 --no-header --tag-name church_cms --tag-name staging > .hosts
          echo "cms.ndifreke-ekott.com" >> .hosts
      - name: Set Release TAG
        run: echo "RELEASE_TAG=$(git describe --tags --abbrev=0 | sed 's/^.//')" >> $GITHUB_ENV
      - name: Run Deploy Playbook
        uses: dawidd6/action-ansible-playbook@v2
        with:
          playbook: infrastructure/ansible-playbook/deploy.yml
          key: ${{secrets.SSH_PRIVATE_KEY}}
          requirements: infrastructure/ansible-playbook/requirements.yml
          options: |
            -i .hosts
            --extra-vars "@./config.json"
            -e "app_version=${{ env.RELEASE_TAG }}"
